---
name: push

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  registry: ghcr.io
  package: ansible

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: List platforms
        id: list-platforms
        run: |
          echo -n "platforms=" >> $GITHUB_OUTPUT
          ls platforms | jq -srR 'split("\n") | map(select(. != "")) | @json' >> $GITHUB_OUTPUT
    outputs:
      platforms: ${{ steps.list-platforms.outputs.platforms }}
  build-push:
    runs-on: ubuntu-latest
    needs: prepare-matrix
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        platform: ${{ fromJSON(needs.prepare-matrix.outputs.platforms) }}
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log into registry
        if: github.event_name != "pull_request"
        uses: docker/login-action@v2
        with:
          registry: ${{ env.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Add container metadata
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.registry }}/${{ env.package }}
          tags: ${{ matrix.platform }}
      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: "{{ defaultContext }}:platforms/${{ matrix.platform }}"
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outpus.tags }}
          cache-to: type=gha,scope=$GITHUB_REF_NAME-${{ matrix.platform }}
          cache-from: type=gha,scope=$GITHUB_REF_NAME-${{ matrix.platform }}

